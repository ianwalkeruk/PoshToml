

<#
newline =  %x0A     ; LF
newline =/ %x0D.0A  ; CRLF
#>
class TomlNewline {
    static [string]rx() {
        $ret =        '\x0A'
        $ret += '|' + '\x0D\x0A'
        return $ret
    }
}

<#
ws = *wschar
wschar =  %x20  ; Space
wschar =/ %x09  ; Horizontal tab
#>

class TomlWs {
    static [string]rx() {
        $wschar =        '\x20'
        $wschar += '|' + '\x09'
        return '(?:' + $wschar + ')*'
    }
}

<#
comment-start-symbol = %x23 ; #
non-ascii = %x80-D7FF / %xE000-10FFFF
non-eol = %x09 / %x20-7F / non-ascii

comment = comment-start-symbol *non-eol
#>
class TomlComment {
    static [string]rx() {
        $commentStartSymbol = '\x23'
        $nonAscii = '(?:' + '[\x80-\uD7FF]' + '|' + '[\uE000-\uFFFF]' + ')'
        $nonEol = '(?:' + '\x09' + '|' + '[\x20-\x7F]' + '|' + $nonAscii + ')'
        return $commentStartSymbol + '(?:' + $nonEol + ')*'
    }
}

<#
keyval = key keyval-sep val

key = simple-key / dotted-key
simple-key = quoted-key / unquoted-key

unquoted-key = 1*( ALPHA / DIGIT / %x2D / %x5F ) ; A-Z / a-z / 0-9 / - / _
quoted-key = basic-string / literal-string
dotted-key = simple-key 1*( dot-sep simple-key )

dot-sep   = ws %x2E ws  ; . Period
keyval-sep = ws %x3D ws ; =

val = string / boolean / array / inline-table / date-time / float / integer
#>
class TomlKeyVal {
    static [string]rx() {
        $unquotedKey = 
        $simpleKey = '(?:' + $quotedKey + '|' + $unquotedKey + ')'
        $key = '(?:' + $simpleKey + '|' + $dottedKey + ')'
        return $key + $keyvalSep + $val
    }
}

class TomlTable {
    static [string]rx() {
        return 'TABLE'
    }
}